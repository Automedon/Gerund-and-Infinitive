{"version":3,"sources":["components/DisplayData.js","App.js","serviceWorker.js","index.js"],"names":["Title","Typography","message","config","top","duration","maxCount","DisplayData","state","data","text","check","sort","a","b","Math","random","i","errors","correctAnswer","errorMessages","correctMessages","checkAnswer","expectedAnswer","answer","success","length","error","handleInfinitive","handleAnswers","handleGerund","handleBoth","this","setState","level","style","marginTop","width","strokeColor","percent","format","toFixed","disabled","onClick","React","Component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.735039f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport { message, Button, Progress } from \"antd\";\r\nconst { Title } = Typography;\r\n\r\nmessage.config({\r\n  top: 10,\r\n  duration: 2,\r\n  maxCount: 1\r\n});\r\n\r\nclass DisplayData extends React.Component {\r\n  state = {\r\n    data: [\r\n      { text: \"Aim\", check: \"infinitive\" },\r\n      { text: \"Appear\", check: \"infinitive\" },\r\n      { text: \"Attempt\", check: \"infinitive\" },\r\n      { text: \"Ask\", check: \"infinitive\" },\r\n      { text: \"Arrange\", check: \"infinitive\" },\r\n      { text: \"Beg\", check: \"infinitive\" },\r\n      { text: \"Care\", check: \"infinitive\" },\r\n      { text: \"Choose\", check: \"infinitive\" },\r\n      { text: \"Claim\", check: \"infinitive\" },\r\n      { text: \"Consent\", check: \"infinitive\" },\r\n      { text: \"Dare\", check: \"infinitive\" },\r\n      { text: \"Decide\", check: \"infinitive\" },\r\n      { text: \"Demand\", check: \"infinitive\" },\r\n      { text: \"Deserve\", check: \"infinitive\" },\r\n      { text: \"Expect\", check: \"infinitive\" },\r\n      { text: \"Fail\", check: \"infinitive\" },\r\n      { text: \"Get\", check: \"infinitive\" },\r\n      { text: \"Hesitate\", check: \"infinitive\" },\r\n      { text: \"Hope\", check: \"infinitive\" },\r\n      { text: \"Hurry\", check: \"infinitive\" },\r\n      { text: \"Intend\", check: \"infinitive\" },\r\n      { text: \"Learn\", check: \"infinitive\" },\r\n      { text: \"Manage\", check: \"infinitive\" },\r\n      { text: \"Mean\", check: \"infinitive\" },\r\n      { text: \"Neglect\", check: \"infinitive\" },\r\n      { text: \"Need\", check: \"infinitive\" },\r\n      { text: \"Offer\", check: \"infinitive\" },\r\n      { text: \"Plan\", check: \"infinitive\" },\r\n      { text: \"Prepare\", check: \"infinitive\" },\r\n      { text: \"Pretend\", check: \"infinitive\" },\r\n      { text: \"Proceed\", check: \"infinitive\" },\r\n      { text: \"Promise\", check: \"infinitive\" },\r\n      { text: \"Refuse\", check: \"infinitive\" },\r\n      { text: \"Seem\", check: \"infinitive\" },\r\n      { text: \"Struggle\", check: \"infinitive\" },\r\n      { text: \"Swear\", check: \"infinitive\" },\r\n      { text: \"Threaten\", check: \"infinitive\" },\r\n      { text: \"Volunteer\", check: \"infinitive\" },\r\n      { text: \"Wait\", check: \"infinitive\" },\r\n      { text: \"Want\", check: \"infinitive\" },\r\n      { text: \"Wish\", check: \"infinitive\" },\r\n      { text: \"Admit\", check: \"gerund\" },\r\n      { text: \"Advise\", check: \"gerund\" },\r\n      { text: \"Anticipate\", check: \"gerund\" },\r\n      { text: \"Acknowledge\", check: \"gerund\" },\r\n      { text: \"Appreciate\", check: \"gerund\" },\r\n      { text: \"Avoid\", check: \"gerund\" },\r\n      { text: \"Bear\", check: \"gerund\" },\r\n      { text: \"Complete\", check: \"gerund\" },\r\n      { text: \"Consider\", check: \"gerund\" },\r\n      { text: \"Defer\", check: \"gerund\" },\r\n      { text: \"Delay\", check: \"gerund\" },\r\n      { text: \"Deny\", check: \"gerund\" },\r\n      { text: \"Discuss\", check: \"gerund\" },\r\n      { text: \"Enjoy\", check: \"gerund\" },\r\n      { text: \"Entail\", check: \"gerund\" },\r\n      { text: \"Finish\", check: \"gerund\" },\r\n      { text: \"Involve\", check: \"gerund\" },\r\n      { text: \"Justify\", check: \"gerund\" },\r\n      { text: \"Keep\", check: \"gerund\" },\r\n      { text: \"Mention\", check: \"gerund\" },\r\n      { text: \"Mind\", check: \"gerund\" },\r\n      { text: \"Miss\", check: \"gerund\" },\r\n      { text: \"Postpone\", check: \"gerund\" },\r\n      { text: \"Practice\", check: \"gerund\" },\r\n      { text: \"Recall\", check: \"gerund\" },\r\n      { text: \"Recollect\", check: \"gerund\" },\r\n      { text: \"Recommend\", check: \"gerund\" },\r\n      { text: \"Resent\", check: \"gerund\" },\r\n      { text: \"Resist\", check: \"gerund\" },\r\n      { text: \"Risk\", check: \"gerund\" },\r\n      { text: \"Sanction\", check: \"gerund\" },\r\n      { text: \"Suggest\", check: \"gerund\" },\r\n      { text: \"Tolerate\", check: \"gerund\" },\r\n      { text: \"Begin\", check: \"both\" },\r\n      { text: \"Can’t bear\", check: \"both\" },\r\n      { text: \"Can’t stand\", check: \"both\" },\r\n      { text: \"Continue\", check: \"both\" },\r\n      { text: \"Hate\", check: \"both\" },\r\n      { text: \"Like\", check: \"both\" },\r\n      { text: \"Dislike\", check: \"both\" },\r\n      { text: \"Love\", check: \"both\" },\r\n      { text: \"Prefer\", check: \"both\" },\r\n      { text: \"Propose\", check: \"both\" },\r\n      { text: \"Start\", check: \"both\" },\r\n      { text: \"Forget \", check: \"both\" },\r\n      { text: \"Go on \", check: \"both\" },\r\n      { text: \"Quit \", check: \"both\" },\r\n      { text: \"Regret \", check: \"both\" },\r\n      { text: \"Remember \", check: \"both\" },\r\n      { text: \"Stop \", check: \"both\" },\r\n      { text: \"Try\", check: \"both\" }\r\n    ].sort((a, b) => Math.random() - 0.5),\r\n    i: 0,\r\n    errors: 0,\r\n    correctAnswer: 0,\r\n    errorMessages: [\r\n      \"You suck\",\r\n      \"Are you even teachable?\",\r\n      \"Wrong!\",\r\n      \"Try again\",\r\n      \"Work harder, crook\",\r\n      \"Bow to me\"\r\n    ],\r\n    correctMessages: [\r\n      \"You did some progress\",\r\n      \"Lucky\",\r\n      \"Yes!\",\r\n      \"Keep temp\",\r\n      \"Good\",\r\n      \"Excellent\"\r\n    ]\r\n  };\r\n  checkAnswer = (expectedAnswer, answer) => {\r\n    return expectedAnswer === answer;\r\n  };\r\n  success = () => {\r\n    let { correctMessages } = this.state;\r\n    message.success(\r\n      correctMessages[~~(Math.random() * correctMessages.length)]\r\n    );\r\n  };\r\n\r\n  error = () => {\r\n    let { errorMessages } = this.state;\r\n    message.error(errorMessages[~~(Math.random() * errorMessages.length)]);\r\n  };\r\n  handleAnswers(answer) {\r\n    let { i, correctAnswer, errors } = this.state;\r\n    if (answer) {\r\n      this.setState({ i: (i += 1) });\r\n      this.setState({ correctAnswer: (correctAnswer += 1) });\r\n      this.success();\r\n    } else {\r\n      this.setState({ errors: (errors += 1) });\r\n      this.error();\r\n    }\r\n  }\r\n  handleInfinitive = expectedAnswer => {\r\n    let answer = this.checkAnswer(expectedAnswer, \"infinitive\");\r\n    this.handleAnswers(answer);\r\n  };\r\n  handleGerund = expectedAnswer => {\r\n    let answer = this.checkAnswer(expectedAnswer, \"gerund\");\r\n    this.handleAnswers(answer);\r\n  };\r\n  handleBoth = expectedAnswer => {\r\n    let answer = this.checkAnswer(expectedAnswer, \"both\");\r\n    this.handleAnswers(answer);\r\n  };\r\n\r\n  render() {\r\n    let { i, errors, correctAnswer, data } = this.state;\r\n\r\n    let check = data[i] ? data[i] : null;\r\n    return (\r\n      <>\r\n        <Title level={3} style={{ marginTop: \"50px\" }}>\r\n          Score\r\n        </Title>\r\n        <Title level={4}>\r\n          Errors: {errors} - Correct Answers: {correctAnswer}\r\n          <br />\r\n          <Progress\r\n            style={{ width: \"300px\" }}\r\n            strokeColor={{\r\n              \"0%\": \"#bce900\",\r\n              \"100%\": \"#00f30d\"\r\n            }}\r\n            percent={(i / data.length) * 100}\r\n            format={percent => percent.toFixed(0) + \"%\"}\r\n          />\r\n        </Title>\r\n        <Title level={1}>{check ? check.text : \"End\"}</Title>\r\n        <div>\r\n          <Button\r\n            disabled={i === data.length}\r\n            onClick={() => this.handleInfinitive(check ? check.check : null)}\r\n          >\r\n            verb + `to-infinitive`\r\n          </Button>\r\n          <Button\r\n            disabled={i === data.length}\r\n            onClick={() => this.handleGerund(check ? check.check : null)}\r\n          >\r\n            verb + `-ing form`\r\n          </Button>\r\n          <Button\r\n            disabled={i === data.length}\r\n            onClick={() => this.handleBoth(check ? check.check : null)}\r\n          >\r\n            Both\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayData;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport DisplayData from \"./components/DisplayData\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DisplayData />\n      <p>Created by Automedon</p>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}